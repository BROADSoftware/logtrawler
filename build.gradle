


plugins {
  id 'nebula.ospackage' version '3.4.0'
}

apply plugin: 'java'

repositories {
    jcenter()
}

version = '0.5.0'

apply plugin: 'eclipse'
	
// Refer to https://issues.gradle.org/browse/GRADLE-1010
eclipseJdt << {
	File f = file('.settings/org.eclipse.core.resources.prefs')
   	f.write('eclipse.preferences.version=1\n')
   	f.append('encoding/<project>=UTF-8')
}

	
dependencies {
    compile 'commons-logging:commons-logging:1.2'
    compile 'log4j:log4j:1.2.14'
    compile 'com.fasterxml.jackson.jr:jackson-jr-objects:2.7.3'
    compile 'commons-cli:commons-cli:1.3.1'
    compile 'org.apache.httpcomponents:httpclient:4.5.2'
    compile 'org.eclipse.jetty:jetty-server:9.3.8.v20160314'
}

jar {
	exclude("log4j.xml")
	rename("log4j-jar.xml", "log4j.xml")
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Logtrawler', 
        	'Implementation-Version': version,
        	'Main-Class': 'com.kappaware.logtrawler.Main'
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


// To launch as: ./run.sh main arg1 arg2 ..
task run_main(type: JavaExec) {
	dependsOn classes
	description = "Main Command launcher"
	main = "com.kappaware.logtrawler.Main"
	classpath sourceSets.main.runtimeClasspath
	if ( project.hasProperty("runArgs") ) {
		args Eval.me(runArgs)	
	}
}

task rpm(type: Rpm) {
	summary 'Log collector'
	packageName 'logtrawler'
	version version
	arch NOARCH
	vendor 'BROADSoftware'
	license 'Apache 2.0'
	os LINUX
	release '1'
	packageDescription 'logtrawler is an agent aimed to monitor one or several folder containing log files. Every collected log line is pushed to a server as a JSON message.'
    
   	from(fatJar.outputs.files) {
	    into '/opt/logtrawler'
	    user 'root'
		group 'root'
		rename 'logtrawler(.+).jar', 'logtrawler.jar'
	    fileMode 0644
    }
    
   	from('scripts/packages/setenv.sh') {
	    into '/etc/logtrawler'
	    user 'root'
		group 'root'
	    fileMode 0644
    }

   	from('scripts/packages/init.sh') {
	    into '/opt/logtrawler'
	    user 'root'
		group 'root'
	    fileMode 0755
    }
    
    preInstall file('scripts/rpm/preInstall.sh')
    postInstall file('scripts/rpm/postInstall.sh')
    preUninstall file('scripts/rpm/preUninstall.sh')
    postUninstall file('scripts/rpm/postUninstall.sh')
}


